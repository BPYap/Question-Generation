# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import aqa_pb2 as aqa__pb2


class EnvironmentServerStub(object):
  """gRPC service for an environment.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.GetObservations = channel.unary_unary(
        '/active_qa.EnvironmentServer/GetObservations',
        request_serializer=aqa__pb2.EnvironmentRequest.SerializeToString,
        response_deserializer=aqa__pb2.EnvironmentResponse.FromString,
        )


class EnvironmentServerServicer(object):
  """gRPC service for an environment.
  """

  def GetObservations(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EnvironmentServerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'GetObservations': grpc.unary_unary_rpc_method_handler(
          servicer.GetObservations,
          request_deserializer=aqa__pb2.EnvironmentRequest.FromString,
          response_serializer=aqa__pb2.EnvironmentResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'active_qa.EnvironmentServer', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
