# general configurations
src_corpus: data/corpus/sample/source.txt
tgt_corpus: data/corpus/sample/target.txt
min_update_rate: 0.5

# bootstrap_corpus configurations
bootstrap_corpus-sentence_encoder: use # choose between {fasttext, glove, use}
bootstrap_corpus-similarity_threshold: 0.7

# prepare_dataset.py configurations
prepare_dataset-validation_ratio: 0.1
prepare_dataset-test_ratio: 0.1

# OpenNMT preprocess.py configurations
# For more information: http://opennmt.net/OpenNMT-py/options/preprocess.html
preprocess-data_type: text # choose between {text, img, audio}
preprocess-train_ids: []
preprocess-src_dir: ''
preprocess-shard_size: 1000000
preprocess-src_vocab: ''
preprocess-tgt_vocab: ''
preprocess-features_vocabs_prefix: ''
preprocess-src_vocab_size: 50
preprocess-tgt_vocab_size: 50
preprocess-vocab_size_multiple: 1
preprocess-src_words_min_frequency: 0
preprocess-tgt_words_min_frequency: 0
preprocess-dynamic_dict: 'false'
preprocess-share_vocab: 'false'
preprocess-src_seq_length: 50
preprocess-tgt_seq_length: 50
preprocess-lower: 'false'
preprocess-filter_valid: 'false'
preprocess-shuffle: 0
preprocess-seed: 3435
preprocess-report_every: 1
preprocess-log_file: ''
preprocess-log_file_level: 0 # choose between {CRITICAL, NOTSET, WARNING, INFO, ERROR, DEBUG, 50, 0, 30, 20, 40, 10}
preprocess-sample_rate: 16000
preprocess-window_size: 0.02
preprocess-window_stride: 0.01
preprocess-window: hamming
preprocess-image_channel_size: 3 # choose between {3, 1}

# OpenNMT train.py configurations
# For more information: http://opennmt.net/OpenNMT-py/options/train.html
train-src_word_vec_size: 50
train-tgt_word_vec_size: 50
train-word_vec_size: -1
train-share_decoder_embeddings: 'false'
train-share_embeddings: 'false'
train-position_encoding: 'false'
train-feat_merge: concat # choose between {concat, sum, mlp}
train-feat_vec_size: -1
train-feat_vec_exponent: 0.7
train-model_type: text # choose between {text, img, audio}
train-model_dtype: fp32 # choose between {fp32, fp16}
train-encoder_type: rnn # choose between {rnn, brnn, mean, transformer, cnn}
train-decoder_type: rnn # choose between {rnn, transformer, cnn}
train-layers: -1
train-enc_layers: 2
train-dec_layers: 2
train-rnn_size: -1
train-enc_rnn_size: 50
train-dec_rnn_size: 50
train-audio_enc_pooling: 1
train-cnn_kernel_width: 3
train-input_feed: 1
train-bridge: 'false'
train-rnn_type: GRU # choose between {LSTM, GRU, SRU}
train-context_gate: 'none' # choose between {source, target, both, none}
train-global_attention: general # choose between {dot, general, mlp, none}
train-global_attention_function: softmax # choose between {softmax, sparsemax}
train-self_attn_type: scaled-dot #choose between {scaled-dot, average}
train-max_relative_positions: 0
train-heads: 8
train-transformer_ff: 2048
train--copy_attn: 'false'
train-copy_attn_type: 'none' # choose between {dot, general, mlp, none}
train-generator_function: softmax # choose between {softmax, sparsemax}
train-copy_attn_force: 'false'
train-reuse_copy_attn: 'false'
train-copy_loss_by_seqlength: 'false'
train-coverage_attn: 'false'
train-lambda_coverage: 1
train-loss_scale: 0
train-data_ids: []
train-data_weights: [1]
train-save_checkpoint_steps: 5000
train-keep_checkpoint: -1
train-gpu_ranks: []
train-world_size: 1
train-gpu_backend: nccl
train-gpu_verbose_level: 0
train-master_ip: localhost
train-master_port: 10000
train-queue_size: 400
train-seed: -1
train-param_init: 0.1
train-param_init_glorot: 'false'
train-train_from: ''
train-reset_optim: 'none' # choose between {none, all, states, keep_states}
train-pre_word_vecs_enc: 'none'
train-pre_word_vecs_dec: 'none'
train-fix_word_vecs_enc: 'false'
train-fix_word_vecs_dec: 'false'
train-batch_size: 8
train-batch_type: sents # choose between {sents, tokens}
train-pool_factor: 8192
train-normalization: sents # choose between {sents, tokens}
train-accum_count: [1]
train-accum_steps: [0]
train-valid_steps: 8
train-valid_batch_size: 2
train-max_generator_batches: 2
train-train_steps: 1024
train-single_pass: 'false'
train-epochs: 0
train-early_stopping: 0
train-early_stopping_criteria: 'none'
train-optim: sgd # choose between {sgd, adagrad, adadelta, adam, sparseadam, adafactor, fusedadam}
train-adagrad_accumulator_init: 0
train-max_grad_norm: 5
train-dropout: [0.1]
train-dropout_steps: [0]
train-truncated_decoder: 0
train-adam_beta1: 0.9
train-adam_beta2: 0.999
train-label_smoothing: 0.0
train-average_decay: 0
train-average_every: 1
train-learning_rate: 1.0
train-learning_rate_decay: 0.5
train-start_decay_steps: 50000
train-decay_steps: 10000
train-decay_method: 'none' # choose between {noam, noamwd, rsqrt, none}
train-warmup_steps: 0
train-report_every: 10
train-log_file: ''
train-log_file_level: 0 # choose between {CRITICAL, NOTSET, WARNING, INFO, ERROR, DEBUG, 50, 0, 30, 20, 40, 10}
train-exp_host: ''
train-exp: ''
train-tensorboard: 'false'
train-tensorboard_log_dir: runs/onmt
train-sample_rate: 16000
train-window_size: 0.02
train-image_channel_size: 3 # choose between {3, 1}

# OpenNMT translate.py configurations
# For more information: http://opennmt.net/OpenNMT-py/options/translate.html
translate-fp32: 'false'
translate-avg_raw_probs: 'false'
translate-data_type: text # choose between {text, img, audio}
translate-src_dir: ''
translate-tgt: 'none'
translate-shard_size: 10000
translate-report_bleu: 'false'
translate-report_rouge: 'false'
translate-report_time: 'false'
translate-dynamic_dict: 'false'
translate-share_vocab: 'false'
translate-random_sampling_topk: 1
translate-random_sampling_temp: 1.0
translate-seed: 829
translate-beam_size: 5
translate-min_length: 0
translate-max_length: 100
translate-stepwise_penalty: 'false'
translate-length_penalty: 'none' # choose from {none, wu, avg}
translate-ratio: -0.0
translate-coverage_penalty: 'none' # choose from {none, wu, avg}
translate-alpha: 0.0
translate-beta: -0.0
translate-block_ngram_repeat: 0
translate-ignore_when_blocking: []
translate-replace_unk: 'true'
translate-phrase_table: ''
translate-verbose: 'true'
translate-log_file: ''
translate-log_file_level: 0 # choose between {CRITICAL, NOTSET, WARNING, INFO, ERROR, DEBUG, 50, 0, 30, 20, 40, 10}
translate-attn_debug: 'false'
translate-dump_beam: ''
translate-n_best: 2
translate-batch_size: 30
translate-gpu: -1
translate-sample_rate: 16000
translate-window_size: 0.02
translate-window_stride: 0.01
translate-window: hamming
translate-image_channel_size: 3 # choose between {3, 1}